// Generated by CoffeeScript 1.7.1
(function() {
  var now, xAxis, yAxis;

  now = new Date().getTime();

  xAxis = {
    type: 'datetime'
  };

  yAxis = {
    minPadding: 0,
    maxPadding: 0,
    allowDecimals: false,
    alternateGridColor: '#F4F4F4',
    title: {
      text: 'Total customers'
    }
  };

  superagent.get('/api/customers').end(function(error, res) {
    var allClients, blue, count, graduatedClients, green, grey, monthAgo, orange, paidClients, red, trialClients, weekAgo;
    if (error || res.status !== 200) {
      console.error('Status: ' + res.status, error);
      $('#container1').text('Status: ' + res.status + ' Message: ' + error);
    }
    grey = '#9E9E9E';
    red = '#D86353';
    green = '#89bf0a';
    orange = '#daa055';
    blue = '#68b0ef';
    allClients = _(res.body).map(function(point) {
      var colour;
      colour = point.delta < 0 ? point.trial_end > point.canceled_at ? orange : red : point.trial_end > now ? blue : green;
      point.color = colour;
      return point;
    }).value();
    count = 0;
    graduatedClients = [];
    trialClients = _(_.cloneDeep(allClients)).filter(function(point) {
      return point.trial_end != null;
    }).forEach(function(point) {
      if (!point.canceled_at) {
        point.color = blue;
      }
      if (point.trial_end < now) {
        return graduatedClients.push({
          x: point.trial_end,
          delta: -1,
          color: green
        });
      }
    }).concat(graduatedClients).sortBy(function(point) {
      return point.x;
    }).forEach(function(point) {
      return point.y = (count += point.delta);
    }).value();
    count = 0;
    paidClients = _(_.cloneDeep(allClients)).filter(function(point) {
      return (point.trial_end == null) || point.trial_end < now;
    }).forEach(function(point) {
      return point.y = (count += point.delta);
    }).value();

    /*
     * Initialize the actual graphs
     */
    $('#container1').highcharts({
      chart: {
        type: 'line'
      },
      plotOptions: {
        line: {
          color: grey
        }
      },
      title: {
        text: 'Customers over time'
      },
      yAxis: yAxis,
      xAxis: xAxis,
      series: [
        {
          name: 'All Clients',
          data: allClients
        }, {
          name: 'Trial Clients',
          data: trialClients
        }, {
          name: 'Paying Clients',
          data: paidClients
        }
      ]
    });
    monthAgo = Date.now() - 2592000000;
    $('#container2').highcharts({
      chart: {
        type: 'line'
      },
      plotOptions: {
        line: {
          color: grey
        }
      },
      title: {
        text: 'Customers in the last 30 days'
      },
      yAxis: yAxis,
      xAxis: xAxis,
      series: [
        {
          name: 'All Clients',
          data: _.filter(allClients, function(point) {
            return point.x >= monthAgo;
          })
        }, {
          name: 'Trial Clients',
          data: _.filter(trialClients, function(point) {
            return point.x >= monthAgo;
          })
        }, {
          name: 'Paying Clients',
          data: _.filter(paidClients, function(point) {
            return point.x >= monthAgo;
          })
        }
      ]
    });
    weekAgo = Date.now() - 604800000;
    return $('#container3').highcharts({
      chart: {
        type: 'line'
      },
      plotOptions: {
        line: {
          color: grey
        }
      },
      title: {
        text: 'Customers in the last 7 days'
      },
      yAxis: yAxis,
      xAxis: xAxis,
      series: [
        {
          name: 'All Clients',
          data: _.filter(allClients, function(point) {
            return point.x >= weekAgo;
          })
        }, {
          name: 'Trial Clients',
          data: _.filter(trialClients, function(point) {
            return point.x >= weekAgo;
          })
        }, {
          name: 'Paying Clients',
          data: _.filter(paidClients, function(point) {
            return point.x >= weekAgo;
          })
        }
      ]
    });
  });

}).call(this);
